<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>com.lxm</groupId>
    <artifactId>hello</artifactId>
    <version>0.0.1-SNAPSHOT</version>
    <packaging>jar</packaging>

    <name>hello</name>
    <description>Demo project for Spring Boot</description>

    <parent>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-starter-parent</artifactId>
        <version>2.0.4.RELEASE</version>
        <relativePath/> <!-- lookup parent from repository -->
    </parent>

    <properties>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
        <java.version>1.8</java.version>
    </properties>

    <dependencies>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-web</artifactId>
        </dependency>

        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-test</artifactId>
            <scope>test</scope>
        </dependency>
    </dependencies>
    <build>
        <defaultGoal>compile</defaultGoal>
        <plugins>
            <plugin>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-maven-plugin</artifactId>
            </plugin>
            <plugin>
                <groupId>com.google.cloud.tools</groupId>
                <artifactId>jib-maven-plugin</artifactId>
                <version>0.9.9</version>
                <configuration>
                    <allowInsecureRegistries>true</allowInsecureRegistries>
                    <from>
                        <image>openjdk:alpine</image>
                    </from>
                    <to>
                        <image>localhost:5000/springboot-hello</image>
                    </to>
                </configuration>
            </plugin>
           <!-- <plugin>
                <groupId>io.fabric8</groupId>
                <artifactId>docker-maven-plugin</artifactId>
                <version>0.23.0</version>
                <configuration>
                    &lt;!&ndash; 本地 docker 环境，参考step1 &ndash;&gt;
                    <dockerHost>tcp://localhost:2375</dockerHost>
                    &lt;!&ndash; 本地 docker 证书 路径，参考step1 &ndash;&gt;
                 &lt;!&ndash;   <certPath>${certPath}</certPath>&ndash;&gt;
                    <images>
                        <image>
                            &lt;!&ndash; 镜像名称 &ndash;&gt;
                            <name>${project.artifactId}</name>
                            <build>
                                &lt;!&ndash; 依赖的基础镜像 &ndash;&gt;
                                <from>localhost:5000/openjdk</from>
                               &lt;!&ndash; <tags>
                                    <tag>latest</tag>
                                    <tag>${project.version}</tag>
                                </tags>&ndash;&gt;
                                &lt;!&ndash; 暴露端口 &ndash;&gt;
                                <ports>
                                    <port>8080</port>
                                </ports>
                           &lt;!&ndash;     <assembly>
                                    &lt;!&ndash; 打包文件在镜像中位置 &ndash;&gt;
                                    <name>${docker.image.jarPath}</name>
                                    &lt;!&ndash; 指定打包进入镜像的文件为 jar 包 &ndash;&gt;
                                    <descriptorRef>artifact</descriptorRef>
                                </assembly>&ndash;&gt;
                               &lt;!&ndash; <cmd>
                                    &lt;!&ndash; 运行镜像执行的命令 &ndash;&gt;
                                    <shell>java -jar ${docker.image.jarPath}/${project.build.finalName}.jar</shell>
                                </cmd>&ndash;&gt;
                            </build>
                        </image>
                    </images>
                </configuration>
            </plugin>-->
        </plugins>
    </build>


</project>
